#include <iostream>
#include <stdexcept>
#include <locale>

using namespace std;

class DynamicArray {
private:
    int* data;
    size_t size;

public:
    DynamicArray(size_t initialSize = 0) : size(initialSize) {
        data = new int[size];
        cout << "Конструктор: создан массив размером " << size << endl;
    }

    ~DynamicArray() {
        delete[] data;
        cout << "Деструктор: массив уничтожен" << endl;
    }

    DynamicArray(const DynamicArray& other) : size(other.size + 1) {
        data = new int[size];
        for (size_t i = 0; i < other.size; ++i) {
            data[i] = other.data[i] + 1;
        }
        cout << "Конструктор копирования: скопирован массив размером " << other.size << endl;
    }

    void set(size_t index, int value) {
        if (index >= size) {
            throw out_of_range("Индекс вне диапазона");
        }
        data[index] = value;
    }

    int get(size_t index) const {
        if (index >= size) {
            throw out_of_range("Индекс вне диапазона");
        }
        return data[index];
    }

    size_t getSize() const {
        return size;
    }
};

int main() {
    setlocale(LC_ALL, "rus");

    DynamicArray arr1(5);
    for (size_t i = 0; i < arr1.getSize(); ++i) {
        arr1.set(i, i + 1);
    }

    DynamicArray arr2 = arr1;

    cout << "Элементы arr1:" << endl;
    for (size_t i = 0; i < arr1.getSize(); ++i) {
        cout << arr1.get(i) << " ";
    }
    cout << endl;

    cout << "Элементы arr2:" << endl;
    for (size_t i = 0; i < arr2.getSize(); ++i) {
        cout << arr2.get(i) << " ";
    }
    cout << endl;
}
